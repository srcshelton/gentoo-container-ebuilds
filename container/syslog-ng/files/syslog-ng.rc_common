#!/sbin/openrc-run
# Copyright 1999-2019 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

: ${SYSLOG_NG_CONFIGDIR:=/etc/syslog-ng}
: ${SYSLOG_NG_CONFIGFILE:=${SYSLOG_NG_CONFIGDIR}/${RC_SVCNAME}.conf}
: ${SYSLOG_NG_STATEFILE_DIR:=/var/lib/${RC_SVCNAME}}
: ${SYSLOG_NG_STATEFILE:=${SYSLOG_NG_STATEFILE_DIR}/${RC_SVCNAME}.persist}
: ${SYSLOG_NG_PIDFILE_DIR:=/var/run/syslog-ng}
: ${SYSLOG_NG_PIDFILE:=${SYSLOG_NG_PIDFILE_DIR}/${RC_SVCNAME}.pid}
: ${SYSLOG_NG_CONTROLFILE:=${SYSLOG_NG_PIDFILE_DIR}/${RC_SVCNAME}.ctl}

: ${SYSLOG_NG_GROUP:=root}
: ${SYSLOG_NG_USER:=root}

podman_memory_size='small'

PN="${RC_SVCNAME:=syslog-ng}" # PN='syslog-ng'
PV='@PVR@'
CATEGORY='app-admin'
container_svc_pid="${SYSLOG_NG_PIDFILE}"
command_opts="$( echo "--cfgfile \"${SYSLOG_NG_CONFIGFILE}\"" \
	"--control \"${SYSLOG_NG_CONTROLFILE}\"" \
	"--persist-file \"${SYSLOG_NG_STATEFILE}\"" \
	"--pidfile \"%PID%\" ${SYSLOG_NG_OPTS:-} --process-mode foreground" )"

container_dir_run="${SYSLOG_NG_PIDFILE_DIR}"
container_use_git="${SYSLOG_NG_USE_GIT:-}"

container_svc_wait=10

. /etc/init.d/_containers_common || return ${?}

dockeropts+=(
	#--cap-drop ALL
	--cap-add CHOWN
	--cap-add DAC_OVERRIDE
	--cap-add DAC_READ_SEARCH
	--cap-add FOWNER
	--cap-add NET_BIND_SERVICE
	--cap-add NET_BROADCAST
	--cap-add NET_RAW
	--cap-add SYSLOG

	$( [[ -e /dev/tty12 ]] && echo '--device /dev/tty12:/dev/tty12' )
	$( [[ -e /dev/console ]] && echo '--device /dev/console:/dev/console' )
	$( [[ -e /dev/xconsole ]] && echo '--device /dev/xconsole:/dev/xconsole' )

	--workdir "${SYSLOG_NG_STATEFILE_DIR}"
)
dockernetwork+=(
	--hostname "$( hostname -s )"
	--network host
)
#dockerports+=(
	#--publish 514:514/udp
#)

dockermounts=(
	${dockermount_etc},ro=true
	${dockermount_lib}
	--mount type=bind,source=/var/log,destination=/var/log
	${dockermount_run}
)

_containers_set_args

#command_user="${SYSLOG_NG_USER}:${SYSLOG_NG_GROUP}"

description="Syslog-ng is a syslog replacement with advanced filtering features."
extra_commands="checkconfig"
extra_started_commands="reload"
description_checkconfig="Check the configuration file that will be used by \"start\""
description_reload="Reload the configuration without exiting"

required_files="${SYSLOG_NG_CONFIGFILE}"
#required_dirs="${SYSLOG_NG_PIDFILE_DIR}"


depend() {
	need hostname containers
	use clock
	after bootmisc
	provide logger
}

checkconfig() {
	local -i rc=0

	if ! docker image ls "${dockerimage}" | grep -Fq -- 'localhost'; then
		eerror "Container image '${dockerimage}' not found"
		return 1
	fi

	ebegin "Checking your configfile (${SYSLOG_NG_CONFIGFILE})"
	if service_started; then
		docker exec "openrc-${PN}-${PV}" \
			syslog-ng -s -f "${SYSLOG_NG_CONFIGFILE}" || rc=${?}
	else
		docker run "${dockeropts[@]}" "${dockermounts[@]}" \
				--cap-drop ALL \
				--name "openrc-${PN}-${PV}-checkconfig" \
				--network none \
				--replace \
				--restart no \
				--rm \
			"localhost/${dockerimage}" -s -f "${SYSLOG_NG_CONFIGFILE}" || rc=${?}
	fi
	eend ${rc} "Configuration error. Please fix your configfile (${SYSLOG_NG_CONFIGFILE})"
}

start_pre() {
	_containers_check_paths

	checkconfig || return ${?}

	checkpath --directory \
			--mode 0700 \
			--owner "${SYSLOG_NG_USER}:${SYSLOG_NG_GROUP}" \
			--quiet \
		"${SYSLOG_NG_STATEFILE_DIR}" ||
	return 1

	if [[ ! -e /dev/log ]]; then
		ln -s /var/run/"${PN}"/log /dev/log
	fi

	_containers_start_pre
}

stop_pre() {
	[ "${RC_CMD}" = "restart" ] && sleep 1
	return 0
}

reload() {
	checkconfig || return ${?}

	_containers_reload
}

# vi: set filetype=gentoo-init-d colorcolumn=80:
