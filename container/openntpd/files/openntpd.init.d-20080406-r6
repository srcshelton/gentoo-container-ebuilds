#!/sbin/openrc-run
# Copyright 1999-2013 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

# Tiny
: ${PODMAN_MEMORY_RESERVATION:=256m}
: ${PODMAN_MEMORY_LIMIT:=512m}
: ${PODMAN_SWAP_LIMIT:=1g}
# Small
#: ${PODMAN_MEMORY_RESERVATION:=512m}
#: ${PODMAN_MEMORY_LIMIT:=1g}
#: ${PODMAN_SWAP_LIMIT:=2g}
# Medium
#: ${PODMAN_MEMORY_RESERVATION:=1g}
#: ${PODMAN_MEMORY_LIMIT:=2g}
#: ${PODMAN_SWAP_LIMIT:=4g}
# Large
#: ${PODMAN_MEMORY_RESERVATION:=2g}
#: ${PODMAN_MEMORY_LIMIT:=4g}
#: ${PODMAN_SWAP_LIMIT:=8g}
# Extra-Large
#: ${PODMAN_MEMORY_RESERVATION:=4g}
#: ${PODMAN_MEMORY_LIMIT:=8g}
#: ${PODMAN_SWAP_LIMIT:=16g}

command="docker"
if type -pf podman >/dev/null; then
	command="podman"
	docker() { [ "${1:-}" = 'rm' ] && trap '' INT ; podman ${@+"${@}"} ; trap  - INT ; }
	export -f docker
fi

# N.B. ${RC_SVCNAME} == 'ntpd', so we don't want to use this
PN='openntpd'
PV='@PVR@'
CATEGORY='net-misc'
dockeropts=(
	#--log-level debug

	--cap-drop ALL
	--cap-add NET_BIND_SERVICE
	--cap-add SETGID
	--cap-add SETUID
	--cap-add SYS_CHROOT
	--cap-add SYS_NICE
	--cap-add SYS_TIME

	${PODMAN_MEMORY_RESERVATION:+--memory-reservation ${PODMAN_MEMORY_RESERVATION}}
	${PODMAN_MEMORY_LIMIT:+--memory ${PODMAN_MEMORY_LIMIT}}
	${PODMAN_SWAP_LIMIT:+--memory-swap ${PODMAN_SWAP_LIMIT}}

	--mount type=bind,source=/var/run/syslog-ng/log,destination=/dev/log
	--mount type=bind,source=/etc/${PN},destination=/etc/${PN},ro=true
	--mount type=bind,source=/var/lib/${PN},destination=/var/lib/${PN}
	--mount type=bind,source=/var/log/${PN},destination=/var/log/${PN}
	--mount type=bind,source=/var/run/${PN},destination=/var/run/${PN}

	--network host
	# "Port mappings have been discarded as one of the Host, Container, Pod, and None network modes are in use"
	#--publish 123:123/udp

	--init
	--interactive
	--name "openrc-${PN}-${PV}"
	--restart on-failure
	#--rm
	--tty
	--workdir '/'
)
dockerimage="service.${CATEGORY}.${PN}:${PV}"

name="containerised OpenNTPD"
command_args="--log-level=info run ${dockeropts[@]} ${dockerimage} -d -f /etc/${PN}/ntpd.conf -p /var/run/${PN}/ntpd.pid ${NTPD_OPTS:-}"
command_background="true"
#command_user="openntpd:openntpd"
start_stop_daemon_args="--wait 1000 --stdout /var/log/${PN}/${command}-${RC_SVCNAME}.log --stderr /var/log/${PN}/${command}-${RC_SVCNAME}.log"
pidfile="/var/run/containers/${PN}.pid"

description="Lightweight NTP server ported from OpenBSD"

depend() {
	need containers
	after ntp-client
	use dns logger
}

start_pre() {
	local git=""

	if ! docker image ls "${dockerimage}" | grep -Fq -- 'localhost'; then
		eerror "Container image '${dockerimage}' not found"
		return 1
	fi

	checkpath --directory --mode 0755 --owner root:root --quiet "$( dirname "${pidfile}" )" || return 1

	if service_started || service_starting; then
		checkpath --directory --mode 0755 --owner root:root --quiet "/var/run/${PN}" || return 1
	else
		checkpath --directory-truncate --mode 0755 --owner root:root --quiet "/var/run/${PN}" || return 1
	fi
	checkpath --directory --mode 0755 --owner root:root --quiet "/var/log/${PN}" || return 1

	if [ -n "${OPENNTPD_USE_GIT:-}" ] && [ "${OPENNTPD_USE_GIT}" != "0" ]; then
		type -pf git >/dev/null 2>&1 && git="git"
	fi
	if [ -d /etc/openntpd/.git ] && [ -n "${git:-}" ]; then
		if ! [ -s /etc/openntpd/.gitignore ]; then
			cat >> /etc/openntpd/.gitignore <<-EOF
				**/._cfg[0-9][0-9][0-9][0-9]_*
				**/.keep*
				**/.*.swp
			EOF
		fi
		pushd /etc/openntpd >/dev/null 2>&1 &&
			git status 2>/dev/null | grep -Eq '^(Untracked files:$|\s+(deleted|modified|new file):\s+)' &&
			einfo "Committing configuration changes to git" &&
			git add --all . >/dev/null 2>&1 &&
			git status | tail -n +4 &&
			git commit -m "Record changes on ${RC_SVCNAME} start" >/dev/null 2>&1
		popd >/dev/null 2>&1
	fi

	local id=''
	id="$( docker ps -a --filter "name=openrc-${PN}-${PV}" --format '{{.ID}}' )"
	if [ -n "${id:-}" ]; then
		docker rm --volumes "${id}" >/dev/null 2>&1
	fi

	# This should have been cleared by checkpath's 'directory-truncate'...
	[ -e "/var/run/${PN}/ntpd.pid" ] && rm "/var/run/${PN}/ntpd.pid" || :
}

start_post() {
	local -i wait=5 count=0 oldpid=0 pid=0 expect_pid=0 have_pid=0
	local sleep='1' pid_file="/var/run/${PN}/ntpd.pid"

	if sleep 0.1 >/dev/null 2>&1; then
		sleep='0.1'
		: $(( wait = wait * 10 ))
	fi

	if [ $(( expect_pid )) -eq 1 ]; then
		while [ ! -s "${pid_file}" ] && [ $(( count )) -lt $(( wait )) ]; do
			sleep ${sleep}
			: $(( count = count + 1 ))
		done
		if ! [ -s "${pid_file}" ]; then
			eerror "Timed-out waiting for '${PN}' PID in file '${pid_file}'"
		else
			have_pid=1
		fi
	else
		have_pid=1
	fi
	if [ $(( have_pid )) -eq 1 ]; then
		# Even though generally considered vestigial, all linux kernels
		# still reserve PIDs up to 300 for kernel use only...
		count=0
		while [ $(( pid )) -lt 301 ] && [ $(( count )) -lt $(( wait )) ]; do
			sleep ${sleep}
			if [ "$( type -t docker 2>dev/null )" = 'function' ]; then
				: $(( pid = $( podman inspect --format '{{.State.Pid}}' "openrc-${PN}-${PV}" 2>/dev/null || echo '0' ) ))
			else
				: $(( pid = $( docker inspect --format '{{.State.Pid}}' "openrc-${PN}-${PV}" 2>/dev/null || echo '0' ) ))
			fi
			: $(( count = count + 1 ))
		done

		if ! [ $(( pid )) -gt 300 ]; then
			eerror "Unable to determine valid PID for '${PN}' from container 'openrc-${PN}-${PV}' (got '${pid}')"
		else
			if ! [ -e "${pid_file}" ]; then
				vewarn "Saving ${PN} PID '${pid}' ..."
				echo "${pid}" > "${pid_file}"
			else
				oldpid="$( cat "${pid_file}" )"
				if ! [ "${oldpid}" = "${pid}" ]; then
					vewarn "Correcting ${PN} PID from '${oldpid}' to '${pid}' ..."
					echo "${pid}" > "${pid_file}"
				fi
				unset oldpid
			fi
		fi
	fi
}

stop_post() {
	local id=''

	id="$( docker ps --filter "name=openrc-${PN}-${PV}" --format '{{.ID}}' )"
	if [ -n "${id:-}" ]; then
		docker stop "${id}" >/dev/null
	fi

	if [ "${RC_CMD:-}" = 'restart' ] || [ "${RC_RUNLEVEL:-}" = 'shutdown' ]; then
		id="$( docker ps -a --filter "name=openrc-${PN}-${PV}" --format '{{.ID}}' )"
		if [ -n "${id:-}" ]; then
			docker rm --volumes "${id}" >/dev/null 2>&1
		fi
	fi

	if [ "${RC_RUNLEVEL:-}" = 'shutdown' ]; then
		[ -e "/var/run/${PN}/ntpd.pid" ] && rm "/var/run/${PN}/ntpd.pid" || :
	fi
}
